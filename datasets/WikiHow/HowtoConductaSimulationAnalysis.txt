@summary
write a problem statement: this step is essential.

@summary
select input variables and entities: use the problem statement to create entities and variables for the simulation.

@summary
make constraints on decision variables: begin to form your constraints1 on the decision variables.

@summary
determine output variables: establish what variables you want the simulation to output.

@summary
collect data from real-life system: gather information from the system to input into the simulation.

@summary
model development: develop a logical diagram/flowchart to visually see the progression of the simulation.

@summary
select simulation software: choose simulation software to run your model.

@summary
model verification: run the simulation and compare the results to the actual system.

@summary
model experimentation & optimization: test the simulation to find the best possible solution to the problem.

@summary
implementation of simulation results: apply the results to the real-world system after determining the best solution based on the data input.
@article
 For simulation to be effective, it needs to solve the right problem. Take a look at the system and its flaws to formulate the problem statement.;
, Entities are the bodies the simulation tracks. For the supermarket model, the entities could be people. There are two types of variables. Decision Variables are variables that can be controlled by the programmer. Uncontrollable Variables are variables that are random and can be approximated, but not controlled by the programmer.
 To customize the simulation to the real world system, assign values and constraints to the variables that can be controlled.
 During this step, consider your problem statement. What are you trying to solve? Try to program output variables that are broad enough to help see the problem. For example, if your only output variable were customer wait time, you would be unable to see the cashier and bagger idle time. You cannot fix a bike with only a flashlight in a dark room. To fully see the problem, you need light from every direction. Only then can you see the problem.
 This can be done using a combination of stopwatches, video surveillance, computer print-outs, and manual data collection (ie: individual tallies when customer leaves within specific time interval)

, This will help you see and better model the system. There are two approaches for developing your flowchart, and eventually your simulation. The model approach you choose will inevitably dictate the outputs.
 You may need to assign different capabilities, such as a random number generation, which would help model the randomness of reality in the simulation. The software you choose affects your simulation, so select the best type for your needs.
 Confirm if the data found is comparable to real data. Additionally, make sure the model is consistent with your initial logic. Did you build the model correctly? Rework your simulation until it resembles the real world data.
 Try altering some of the variables. Graph all findings to see all possible solutions, as there may be more than one solution to the problem. You as the programmer decide the best possible option based on your knowledge of the system. For example, if the simulation output suggests that one solution is having 30 cashiers working per shift, you as a programmer know that is not economically possible for the store. You must find a better solution.
 Be prepared to see changes in the system function.

