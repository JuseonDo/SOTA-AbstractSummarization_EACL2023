@summary
decide the accessibility of your field (one of: public, protected, protected internal, internal, private).

@summary
,

@summary
decide the scope of your field (either static or instance scope).

@summary
,

@summary
decide the changeability of your field (one of: const, readonly, or neither).

@summary
declare the field using the following syntax: accessibility data-type field-name ;

@article
,, The following points should help you decide:


Most fields are normal. That is, they are neither const nor read-only.
If your field is intended to hold a simple constant value and that value is a ValueType child that can be initialized immediately or a string value, you should declare the field as const. Constant (const) fields can be initialized only in the declaration of the field.
If your field is intended to hold a constant that is from a reference type (such as a Button, Student or any other class that is not a struct or enum), declare it as readonly. Read only fields can be initialized either in the declaration or within any constructor of the class and not anywhere else.
